image: node:18  # Use appropriate image for your stack
clone:
  depth: full 
pipelines:
  branches:
    develop:
      - step:
          name: Deploy to Staging
           
          script:
            - echo "Deploying to Staging..."

            - mkdir -p ~/.ssh
            - echo "$SSH_KEY" > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            - echo "DB_HOST=$DB_HOST" >> .env
            - echo "DB_USER=$DB_USER" >> .env
            - echo "DB_PASSWORD=$DB_PASSWORD" >> .env
            - echo "DB_NAME=$DB_NAME" >> .env
            - echo "DB_PORT=$DB_PORT" >> .env
            - scp -o StrictHostKeyChecking=no .env $SSH_USER@$UAT_HOST:$UAT_PATH/.env
            - ssh -o StrictHostKeyChecking=no $SSH_USER@$UAT_HOST "source ~/.nvm/nvm.sh && nvm list && nvm use 20 && npm -v && cd $UAT_PATH && git pull origin develop && npm install && npm run build && pm2 restart all"
            # - ssh -T -o StrictHostKeyChecking=no $SSH_USER@$UAT_HOST "

            #   echo Success "
              
  # && npm install && pm2 restart all

    main:
      - step:
          name: Deploy to Production
          script:
            - echo "Deploying to Production..."
            - mkdir -p ~/.ssh
            - echo "$SSH_KEY" > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            - ssh -o StrictHostKeyChecking=no $SSH_USER@$PROD_HOST "cd $PROD_PATH && git pull origin main && npm install && pm2 restart all"

# definitions:
#   caches:
#     nvmcache: $HOME/.nvm